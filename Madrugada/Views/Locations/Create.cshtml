@model Madrugada.Models.Location

@{
    ViewData["Title"] = "Create";
}
<style>

    #map, #street {
        height: 400px;
        width: 100%;
    }
</style>
<h1>Create</h1>

<h4>Location</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="mainform">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WorkId" class="control-label"></label>
                <select asp-for="WorkId" class="form-control" asp-items="ViewBag.WorkId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Text" class="control-label"></label>
                <textarea asp-for="Text" class="form-control"></textarea>
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <button id="GeocodingBtn" type="button" class="btn btn-link">从地图上的标记点自动获取地址</button>
            <div class="form-group">
                <label asp-for="Latitude" class="control-label"></label>
                <input asp-for="Latitude" class="form-control" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Longitude" class="control-label"></label>
                <input asp-for="Longitude" class="form-control" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Zoom" class="control-label"></label>
                <input asp-for="Zoom" class="form-control" value="5" />
                <span asp-validation-for="Zoom" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="HasStreetView" /> @Html.DisplayNameFor(model => model.HasStreetView)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="StreetViewLatitude" class="control-label"></label>
                <input asp-for="StreetViewLatitude" class="form-control" />
                <span asp-validation-for="StreetViewLatitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StreetViewLongitude" class="control-label"></label>
                <input asp-for="StreetViewLongitude" class="form-control" />
                <span asp-validation-for="StreetViewLongitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StreetViewHeading" class="control-label"></label>
                <input asp-for="StreetViewHeading" class="form-control" value="0" />
                <span asp-validation-for="StreetViewHeading" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StreetViewPitch" class="control-label"></label>
                <input asp-for="StreetViewPitch" class="form-control" value="0" />
                <span asp-validation-for="StreetViewPitch" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublished" /> @Html.DisplayNameFor(model => model.IsPublished)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <div id="map"></div>
        <div class="form-group form-check">
            <label class="form-check-label">
                <input class="form-check-input" type="checkbox" id="doNotSyncStreet" /> 不通过更新地图位置坐标更新街景地图位置
            </label>
        </div>
        <div id="street">点击地图以显示街景</div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        var markers = [];
        var panorama;
        var map;
        var geocoder;
        // Initialize and add the map
        function initMap() {
            geocoder = new google.maps.Geocoder();
            map = new google.maps.Map(
                document.getElementById('map'), { zoom: 5, center: { lat: 35.6693863, lng: 139.6012972 }, streetViewControl: false });
            map.addListener('zoom_changed', function () {
                zoombox = document.getElementById('Zoom');
                zoombox.value = map.getZoom();
            });


            map.addListener('click', function (event) {
                setmapmarker(event.latLng, false);
                syncstreet(event.latLng);
            });

            $("#Latitude").on('change', changelatlngbox);
            $("#Longitude").on('change', changelatlngbox);


        }
        function changelatlngbox() {
            var validator = $("#mainform").validate();


            var islatvalid = validator.element($("#Latitude"));
            var islngvalid = validator.element($("#Longitude"));
            if (islatvalid && islngvalid) {
                myLatLng = new google.maps.LatLng({ lat: parseFloat($("#Latitude").val()), lng: parseFloat($("#Longitude").val()) }); 
                setmapmarker(myLatLng, true);
                syncstreet(myLatLng);
            }
        }

        function setmapmarker(latLng, setcenter) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            markers = [];

            lat = latLng.lat();
            lng = latLng.lng();
            $("#Latitude").val(lat);
            $("#Longitude").val(lng);
            var marker = new google.maps.Marker({ position: latLng, map: map });
            markers.push(marker);
            if (setcenter) {
                map.setCenter(latLng)
            }
        }

        //give map position to street (check syncbox status)
        function syncstreet(latLng) {
            syncbox = document.getElementById('doNotSyncStreet');
            if (!syncbox.checked) {
                if (panorama == undefined) {
                    panorama = new google.maps.StreetViewPanorama(
                        document.getElementById('street'), {
                            position: latLng,
                            pov: {
                                heading: 0,
                                pitch: 0
                            }
                        });

                    //panorama.addListener('pano_changed', function () {
                    //    panorama.getPano();
                    //});

                    //panorama.addListener('links_changed', function () {
                    //    var links = panorama.getLinks();
                    //});

                    panorama.addListener('position_changed', function () {
                        $("#StreetViewLatitude").val(panorama.getPosition().lat());
                        $("#StreetViewLongitude").val(panorama.getPosition().lng());
                    });

                    panorama.addListener('pov_changed', function () {
                        $("#StreetViewHeading").val(Math.round(panorama.getPov().heading));
                        $("#StreetViewPitch").val(Math.round(panorama.getPov().pitch));
                    });
                }
                else {
                    panorama.setPosition(latLng);
                }
            }
        }

        geocodebtn = document.getElementById('GeocodingBtn');
        geocodebtn.addEventListener('click', function () {
            if (markers.length != 1) {
                alert("地图上没有标记点");
            }
            else {
                geocoder.geocode({
                    'latLng': markers[0].position
                }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            addressbox = document.getElementById('Address');
                            addressbox.value = results[0].formatted_address;
                        }
                    }
                    else {
                        alert("获取地址失败");
                    }
                });
            }

        });




    </script>
    @{
        await Html.RenderPartialAsync("_GoogleMapsApiPartial");
    }
}
