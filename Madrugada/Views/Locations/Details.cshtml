@using Microsoft.AspNetCore.Identity
@model Madrugada.Models.LocationViewModel

@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Details";
}
<style>

    #map, #street {
        height: 400px;
        width: 100%;
    }
</style>


<h2>
    @Html.DisplayFor(model => model.Location.Name)
</h2>
<h3>
    @Html.DisplayFor(model => model.Location.Work.Name)
</h3>
<p>
    @Html.DisplayNameFor(model => model.Location.Address)：@Html.DisplayFor(model => model.Location.Address)
</p>


<p>
    @Html.DisplayFor(model => model.Location.Text)
</p>

<div id="map"></div>
<div id="street"></div>
<script>
    // Initialize and add the map
    function initMap() {
        // The location of Uluru
        var loc = { lat: @Model.Location.Latitude, lng: @Model.Location.Longitude };
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: @Model.Location.Zoom, center: loc });
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({ position: loc, map: map });

        @if (Model.Location.HasStreetView)
        {
            <Text>

        var paraloc = { lat: @Model.Location.StreetViewLatitude, lng: @Model.Location.StreetViewLongitude };
        var paramap = new google.maps.Map(
            document.getElementById('street'), { zoom: @Model.Location.Zoom, center: paraloc });
        var panorama = new google.maps.StreetViewPanorama(
            document.getElementById('street'), {
                position: paraloc,
                pov: {
                    heading: @Model.Location.StreetViewHeading,
                    pitch: @Model.Location.StreetViewPitch
                        }
            });
            </Text>
        }
    }
</script>
<div class="container-fluid">
    <div class="row">
        @foreach (var image in Model.Location.Images)
        {
            if ((image.IsCompare) && (!image.IsCg))
            {
                <div class="col-sm-6">
                    <img src="@image.Url" class="img-fluid" />
                </div>
                <div class="col-sm-6">
                    <img src="@image.CompareImage.Url" class="img-fluid" />
                </div>


            }
        }
    </div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Location.LocationId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
<hr />
<h4>留言板</h4>
<div>
    <form asp-controller="Messages" asp-action="PostMessage" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @if (SignInManager.IsSignedIn(User))
        {
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Message.IsAnonymous" name="IsAnonymous" /> @Html.DisplayNameFor(model => model.Message.IsAnonymous)
                </label>
            </div>
        }
        <div class="form-group">
            <label asp-for="Message.ReplyId" class="control-label"></label>
            <input asp-for="Message.ReplyId" class="form-control" name="ReplyId" />
            <span asp-validation-for="Message.ReplyId" data-valmsg-for="ReplyId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Message.Content" class="control-label"></label>
            <textarea asp-for="Message.Content" class="form-control" name="Content"></textarea>
            <span asp-validation-for="Message.Content" data-valmsg-for="Content" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </form>
</div>

<hr />
<div>
    @foreach (var item in Model.Location.Messages)
    {
        <div class="card" id="@item.MessageId">
            <div class="card-body">
                <a href="#@item.MessageId" class="badge badge-info">
                    #@item.MessageId
                </a>
                @if (item.IsReply)
                {
                    <Text>
                    <a href="#@item.ReplyId" class="card-link">&gt;&gt;@item.ReplyId</a>
                    </Text>
                }
                <p class="card-text">
                    @item.Content
                </p>

            </div>
        </div>
    }

</div>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=@Environment.GetEnvironmentVariables()["GoogleMapAPIKey"]&callback=initMap">
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}